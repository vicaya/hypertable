Version 0.9.5.0.pre:
(2011-03-24)

    Master overhaul
    MetaLog overhaul
    Asynchronous Scanner API
    Upgraded to Thrift 0.6.0
    Upgraded to CDH3B4
    Added sys/RS_METRICS
    Fixed bug in monitoring system that was calculating buggy Cell and Byte read/write rates.
    Added METADATA-split master failover tests
    Added MasterClient-TransparentFailover test; fix bugs that turned up
    Added VERSION_MISC_SUFFIX to version string for 0.9.5.0.pre release.
    Added delete_count to CellStoreV5Trailer which stores the number of delete records in the CS.
    Added list of replaced files to CellStoreV5.
    Fixed soft_limit regression
    Fixed intermittent test failues due to exit(); Got rid of valgrind warnings
    Added two-phase master requests
    Fixed warnings
    Upgraded version number to 0.9.5.0
    Cleaned up prune threshold limits; Got rid of warnings
    Fixed deadlock in ResponseManager
    Fixed data loss bug - made CommitLog close synchronous; fixed async scanner bug
    [Issue 579]  metalog backup verification causing intermittent test failures. Fixed
    Added regression tests for stopping synchronous and asynchronous scanners abruptly before scan completes.
    Fixed deadlock in TableScannerAsync code.
    Added needs_compaction flag to RangeServer::load_range method.
    [Issue 578]  Deadlock in async scanner. Fixed
    Added ht_master_client shell program with shutdown command
    Fixed hyperspace-reconnect test
    Fixed monitoring server initialization problem
    Minor fix to dot jpg file generation.
    added start_time,end_time as http query params
    Close cell store file before removing directory
    Create <data dir>/run folder if required
    Fixed a bunch of minor issues.
    [Issue 577]  RangeServer::commit_log_sync should respect group commit. Fixed
    Added regression tests and bug fixes for Future API.
    Performance and functional bug fixes to TableScanner class.
    Implemented changes to C++ and Thrift clients to support asynchronous scanners. -TODO: add tests for Php and Python 
    Fixed a bug that was causing the METADATA-split-recovery test to fail intermittently.
    issue 552: Ensure Hyperspace handles get closed; Naming cleanup
    Fixed incorrect CellStoreTrailerV5 version check caught by assert
    Added CellStoreV5; Monitoring system improvements (avg. key & value size)
    added new column to table stats
    Added file_count to StatsTable; Fixed compression ratio computation
    Got rid of read_ids flag in Schema parse API
    "changes to header labels"
    Monitoring UI Changes, Sorting options for stats summary
    Updated clean-database.sh script to reflect new rsml backup location
    added invalidate methods for table name changes
    bunch of changes to Monitoring UI changes (reading from json and got rid google graphs which gives summary) Added Ta
    Fixes to monitoring & stats gathering
    Fixed bugs caught by Andy Thalmann (ScanContext copy ctor bug)
    added table names to json , removing unnecessary code
    Fixed minor monitoring/stats gathering bugs
    issue 563: fixed METADATA split test
    bunch of changes to Monitoring UI changes (reading from json and got rid google graphs which gives summary) Added Ta
    Added Hypertable.RangeServer.CellStore.SkipNotFound
    issue 559: Prevent transfer log from getting linked in twice
    issue 552: Ensure Hyperspace handles get closed; Naming cleanup
    [Issue 505] Client-no-log-sync regression failure
    issue 537: Fixed RangeServer shutdown hang
    issue 542: Only write last-dfs file if it doesn't exist
    issue 544: Set default RangeServer memory limit to 50%
    issue 553: Schema HQL render wrap table name in quotes if necessary
    issue 545: Reduced random-write-read test to 1/5 the size
    [Issue 551] Upgraded to QuickLZ 1.5
    Fixed bugs related to MasterGc and live file tracking
    Renamed MoveStart and MoveDone RSML operations to RelinquishStart and RelinquishDone.
    Made changes to BalanceStarted/Done and RangeMoveLoaded/Acknowledged MML entries.
    Added code for additional MML entries.
    Changed MasterMetaLog to garbage collect entries during recovery.
    Added MoveStart and MoveDone RSML entries.
    Changed RangeServerMetaLog to garbage collect entries during recovery.
    Fixed rare bug that caused root range corruption
    issue 547: Found and fixed more race conditions
    Fixed excessive maintenance scheduling during low memory condition
    Fixed deadlocks uncovered recently
    Fixed race cond in drop_table; Fixed RangeServer::update bug
    Changed DfsBroker.Local.DirectIO default to false
    Fixed some stats gathering issues discovered in sys/RS_METRICS
    issue 531: Fixed bug in load_generator that caused intermittent drop of last cells
    Added RangeServer::relinquish_range() (with RSML update code stubbed out)
    Added Hyperspace::Session::open() method with no callback; code cleanup
    Use "scanned" cells/bytes for load metrics; Added paging info to load metrics
    Fixed recently introduced "bad ProxyName" problem
    Do not reduce the limit below the minimum
    Scan and filter rows fix and optimization
    Config property "Hypertable.RangeServer.LowMemoryLimit.Percentage" has been added
    Added disk_used, disk_estimate, and compression_ratio to StatsTable
    Fixed revision number problem in CommitLogReader with link entries
    Renamed Master::report_split() to Master::move_range()
    Added MML
    Fixed monitoring stats; fixed JSON output for RS summary
    Monitoring overhaul part 1
    new rangeserver stats
    changes to use new rangeserver summary data
    Destroy comm has been fixed
    HQL scan and filter rows option added
    Logic changed to setup row intervals in case of scan and filter rows
    Optimization for scan and filter rows
    Scan and filter rows has been implemented (Issue 525)
    check for negative resolution
    issues with config
    Added resolution param to rrd page
    Fixed monitoring stats; fixed JSON output for RS summary
    Monitoring overhaul part 1
    Check for zero-lengthed row and skip in LoadDataSource
    Allow NULL strings to be passed into FlyweightString
    Fixed bad memory reference in RangeServer::FillScanBlock
    cleanup has been added
    Added prepend_md5 tool
    Redirect thrift output to HT logger
    Assignment operator added
    Support empty qualifier filtering
    Recursive option added to the hyperspace readdirattr command
    Recursivly option added to the hyperspace readdirattr command
    Include sub entries for get_listing/NamespaceListing, readdir_attr/DirEntryAttr
    Fixed syntax error recently intoduced into Ceph broker code
    Added StrictHostKeyChecking=no to rsync
    Added regexp filtering to DUMP TABLE command.
    Added optimization for row and qualifier regex matching.
    Added script to compare test runs times and detect potential performance regressions.
    Cleaned up SELECT [CELLS] Hql command.
    Removed DfsBroker.Host from default hypertable.cfg; Cleaned up DFS Port properties
    Fixed bug in Hyperspace caused by Reactor thread directly calling BerkeleyDbFilesystem on disconnect.
    Improved Master handling of already assigned location in register_server
    Fixed performance regression in ScanContext by using set instead of hash_set for exact qualifiers


Version 0.9.4.3:
(2010-11-15)

    issue 534: Made RangeLocator thread-safe
    MetaKeyBuilder crash with nested namespces fixed
    Got rid of spurious "Connection refused" error messages
    Decreased default bucket count to 20 for DUMP TABLE
    Added group commit
    Added regex filtering on ROW, COLUMN FAMILY, and VALUE
    Modified Capfiles to start ThriftBroker on master
    Added code to catch BAD HEADER LENGTH exception in IOHandlerDatagram
    Fixed unprotected access to Range stats data
    Changed regexp members of ScanSpec to use memory arena
    Added more documentation about how to LOAD DATA INFILE from stdin
    Added support for filtering by qualified column and remove restriction of HT rowkey==first col in Hi
    Added the ability to set multiple column qualifier filters for a given column family.
    Added retry logic to LiveFileTracker::update_file_column. -Added regression test, commented out for 
    issue 247: Added methods to RangeServerClient that accept Timer
    Fixed bug in AsyncComm poll() mode
    Evaluate --hyperspace host:port argument
    Fixed problems in MetalogRangeServer and FileBlockCache tests (Andy Thalmann)
    Fixed bug in SerializedCellsReader; Added more test scripts
    Toplevel directory added
    Added parallel INCR test to PerformanceTest; Increased ThriftBroker timeouts
    Added instrumentation to group-commit tests; Fixed TestHarness
    Lazy fix for issue 530
    Crash fixed (happens for MutatorNoLogSyncTest)
    Close open file handles before delete file
    Hypertable.DataDirectory (Hypertable data directory root) configuration parameter added to the Defau
    Added RE2 dependency to PackageHelper
    Added API support for row, value and column qualifier regexps. -Added API support for row, value and
    Added dependency & cmake check for RE2 regex library.
    Fixed error in CREATE NAMESPACE documentation


Version 0.9.4.2:
(2010-10-26)

    Upgraded to Thrift 0.5.0
    Added COUNTER type column family.
    Fixed potential deadlock in periodic mutator code path.
    Added missing rrd dependencies to packages
    Pulled in Trent's fix for null values in TextTableInputFormat and InputFormat.
    Support for cell flags (FLAG_INSERT, FLAG_DELETE_*) in thrift serialized cells
    Make use of existing Common/endian-c.h
    Read and set timeout for thriftbroker
    Added optimization to increment CellCache counter in place
    Updated PerformanceTest added support for increment
    Fixed problem with IF EXISTS option to DROP NAMESPACE
    Added clean task as dependency to jar task.
    issue 518: Trim whitespace to avoid HqlParser error
    issue 517: compilation problem with VERSION constant in CommHeader
    issue 515: prevent PHP error reporting from being enabled unconditionally
    Fixed ThriftBroker crash when opening bad namespace
    Added resolution param to rrd page


Version 0.9.4.1:
(2010-09-23)

    issue 516: fixed Table::get_name()
    Monitoring README fix.
    shell script changes
    Removed config.yml.in Changes to start script.
    changes to config.yml
    using thin server now, fixed config.yml data dir issue, added progress bar on graphs page
    Modified Monitoring UI start/stop scripts.
    Fixed bugs in Hive extension introduced by thrift 0.4.0 byte[] -> ByteBuffer change.


Version 0.9.4.0:
(2010-09-08)

    Added Namespaces
    Added AG garbage collection logic for MAX_VERSIONS, deletes, and TTL
    Hypertable Monitoring web interface using sinatra
    Made changes to garbage collect unused Hyperspace BerkeleyDB logs.
    Upgraded to Thrift 0.4.0
    issue 501: Made Capistrano "upgrade" task first verify that upgrade is OK
    issue 440: Renamed CellFlag to KeyFlag; Renamed put_ methods to offer_
    issue 504: Store relative filenames in METADATA
    Added RENAME TABLE feature.
    issue 479: Added support for configurable toplevel directory name
    issue 174: Changed all state file/dir names to include table id instead of name
    Modified capfile to start and stop monitoring server on master.
    Updated location of monitoring UI code.
    Modified start and stop scripts for Monitoring UI
    Made changes to print out ProxyMap to text file to be used for the Monitoring UI.
    Fixed string encoding/decoding problem in Java code
    Fixed stats gathering logic to handle variable length string table ID
    issue 316: Moved CREATE TABLE options to the end after column defs
    issue 487: Fixed Comm layer core dump with many client connections
    issue 496: Fixed bad logic in EINTR handling
    Changed namespace "SYS" to "sys"
    issue 497: fixed problem of column qualifier not getting cleared in Thrift API
    issue 11: Use shorter cellstore filenames. Fixed
    Added hypertable shell regression test for namespaces. Updated some documentation.
    Namespace Client API changes.
    issue 174: Changed all state file/dir names to include table id instead of name
    issue 234: Propagate better error messages from DfsBroker to RangeServer log
    issue 106: Use JAVA_HOME to find java binary, if set
    Got rid of verbose logging from recent AG garbage collection change - Also changed Hypertable.RangeServer.AccessGrou
    issue 479: Added dual-instance regression test
    Changed semantics of readdirattr and readpathattr Hyperspace commands
    Added NameIdMapper class.
    Made changes to store next table id in Hyperspace..
    Added Hyperspace readpathattr API to list the value of an attribute for all components in a path
    Added Hyperspace attr_incr API to atomically increment an attribute.
    [Issue 148] hql parser doesn't like quotes inside a string even when escaped. Fixed.
    [Issue 481] ThriftClient-reconnect-hyperspace failure. Fixed.
    [Issue 491] core dump at get_ts64() of Time.cc. Fixed
    [Issue 488]  Hyperspace crash. Fixed
    [Issue 492] RangeServer crash. Fixed
    Fixed bug in Master stats collection.
    Made changes to checkpoint BDB every time there is 1M worth on uncheckpointed log data.
    Minor fix in FindRRDtool.cmake
    Don't link Hyperspace.Master to tcmalloc for 32-bit

Version 0.9.3.4:
(2010-07-15)

    Switched to CDH3; Made Ant and Thrift required
    Updated some auto-generated files for new version of thrift
    Updated HqlHelpText with CELL_LIMIT feature info.
    Don't link ThriftBroker with tcmalloc on 32-bit
    Added support for newer versions of Boost
    Minor fixes to monitoring code.
    Added cell_limit feature to scan/select queries.
    Fixed link problem with serverup on Mac OSX
    Added dependent RRD libs to install

Version 0.9.3.3:
(2010-06-23)

    Fixed bug in fhsize.sh; Added fhsize task to Capfiles - Load libthrift jar file to CLASSPATH first
    Minor fixes to namespace violations and use Table name in place of ID for monitoring.
    Fixes to mapred Input/Output formats
    Added upgrade task to Capfiles
    Made changes to monitoring system to print Table name as well as ID.
    Hypertable-Hive connector.
    More tuning based on perfeval test1 results
    Changed ThriftBroker threading model to threaded instead of thread pool


Version 0.9.3.2:
(2010-06-12)

    Changed some defaults based on perf tests
    Added range readahead in IntervalScanner - Report info about actual data read in Performance test driver
    Upgraded to thrift-0.3.0-rc4 from http://people.apache.org/~bryanduxbury/thrift-0.3.0-rc4.tar.gz
    Initial version of Monitoring application
    Fixed Sigar library name for OSX.
    Modified Thrift get_schema API to return Schema object and added get_schema_str API
    Fixed TableSplit.java to lookup hostname for location since Hadoop doesn't understand IP addr
    issue 356: Record DFS is run/last-dfs file and report error if mismatch
    Fixed race condition in Master::get_statistics()
    Fixed timeout problems with ThriftClient
    Fixed compile problem in ThriftBroker;  Added run-benchmark.sh script
    increased transfer buffer
    Added support for Zipf, report output file, etc.
    Added rrd library to install; Fixed race condition in Client table caching
    Increased interval scanner readhead buffer size 5x512K
    Fixed bugs in ThriftBroker next_cells_serialized and next_row_serialized APIs
    Added next_row_serialized API to ThriftBroker.
    Added system wide stats like #cores, disk , mem utilization, load avg to monitoring stats.
    Added code to blow away monitoring dir when clean-database.sh is run.
    Added PerformanceTest benchmark framework - Switch ThriftBroker to TThreadPoolServer on linux - Added _serialized me
    Added support for DIRECT I/O
    [Issue 464] Add refresh_mutator API. Added refresh_shared_mutator API to Thrift interface
    [Issue 86] Monitoring.
    Added Master maintenance timer
    Fixed circular dependency in build.
    issue 414: added thriftbroker and spare Capistrano roles - Also included DfsBroker in the hypertable-thriftbroker pa
    added the ability to specify start/end row with streaming fixed the handling of splits with regards to maps
    Added Hypertable.RangeServer.Scanner.BufferSize
    Set key_compression_scheme propery in CellStoreV3 trailer
    issue 427: Added expiration_time and expirable_data to CellStoreTrailerV3
    issue 149: Added prefix key compression to CellStore (v3)
    [Issue 259] LDI should be able to load data from DFS. Updated documentation.


Version 0.9.3.1:
(2010-04-14)

    added support for map reduce streaming
    Fixed prune_tsv to work with DUMP TABLE format, added regression test
    issue 449: Remove fhsize from RPM and DEB post-install
    [Issue 448] Hypertable shell trying to connect to DFSBroker. Fixed.
    issue 439: Strip duplicate cells during scan
    issue 443: Check for invalid ':' character in column family names
    issue 442: Escape/unescape row key and column qualifier
    Added Dfs support to DUMP TABLE command.
    [Issue 416] Commands taking long time to run. Fixed
    [Issue 420] Incorrect checking of errno after calling FileUtils:: function. Fixed
    issue 436: Fixed problem causing full table scan for each split
    issue 408: Fixed problem where scanner didn't propagate revision number
    issue 430: Fixed STL comparator semantics
    issue 385: Made REPLICATION factor configurable per-table and access group
    [Issue 175] HQL parser getting confused on INSERT of 4-digit row key. Fixed.
    issue 124: Documented LDI options IGNORE_UNKNOWN_COLUMNS and DUPLICATE_KEY_COLUMNS
    issue 260: Display useful error message when LDI HEADER_FILE not found
    issue 419: Fixed race condition in Comm::connect HandlerMap access
    issue 421: Fixed Free Memory Read bug in ProxyMap
    [Issue 395] Client-no-log-sync test fails intermittently. Fixed
    [Issue 381] HqlInterpreter::execute(...) pass reference to output parameter.
    issue 378: Added escaping of '\' in addition to \n and \t
    issue 423: Fixed MetaLogDfsBase::get_filename()
    issue 424: Added destructor to MetaLogReaderDfsBase to close file handle
    issue 402: Lazily load CellStore block index for faster startup time
    Fixed warnings on Linux x86_64 gcc 4.1.2
    [Issue 259] Checked in changes to allow LDI and SELECT to read/write from/to  DFS.
    issue 136: Fixed bug in DfsBroker ClientBufferReaderHandler
    issue 403: fixed Coverity bugs
    issue 417: Allow quoted table names in INSERT command - Added regression test (verifies issue 34 as well)
    issue 34: Fixed bug in ScanContext causing minimum timestamp to be 1970-01-01
    issue 422: Fixed bad memory reference after copying Managed objects
    Fixed minor (innocuous) problems in Comm layer
    issue 411: fixed priority_queue less comparator
    issue 410: fixed reverse proxy map invalidation
    Fixed double file handle close in HQL interpreter
    issue 406: Check iterator against appropriate map structure
    issue 404: close file handle in FileUtils::file_to_buffer
    Fixed FindThrift.cmake to look in /usr/lib64
    Added libstacktrace to package
    Fixed Capfile rsync_installation to work with FHSized install


Version 0.9.3.0:
(2010-03-22)

    Added Hyperspace replication
    Added MapReduce connector
    Added Query Cache
    FreeBSD port
    Solaris port
    Added DUMP TABLE
    Added LOAD DATA FORMAT input file format auto-detect
    Fixed memory leak
    Added shadow CellCache
    Added poll() support to Comm layer for Linux 2.4 kernels
    Exclude CellStores that are outside of scan spec timestamp range
    Improved efficiency of KeyWritable; added comments
    Fixed race condition with proxy map propagation
    Updated htbuild
    Added missing ssl library to CephBroker build
    Added --thrift flag to ht_load_generator tool to test loads via ThriftBroker.
    Changed PerformanceEvaluation tool to generate random buffer once and re-use it to lower CPU load
    Increased ThriftClient timeout to 10min for MR PerformanceEvaluation task
    Changed Hyperspace lock operation result log from debug to info.
    Fixed recursive includes in hypertable jar files that were bloating the file size
    Modified path for Java Client examples and build.xml paths for examples jar file
    Added Hypertable PerformanceEvaluation class.
    Fixed duplicate server location assignment problem
    Added Key class to Thrift, make Cell a composition of Key and value
    Plumbed the Client::get_table_splits API through the ThriftBroker
    Checked in OutputFormat for Hypertable MapReduce connector.
    Added 'exists_table' API to Hypertable client, Thrift interface and HQL.
    Added INSTALL_EXCLUDE_DEPENDENT_LIBS cmake variable
    More FreeBSD porting work
    Turned off ShadowCache by default
    Made poll error handling more graceful (return error instead of exit)
    Added Hypertable.RangeServer.AccessGroup.ShadowCache property to enable/disable shadow cache
    Workaround for xen timestamp problem; Fixed Master deadlocks
    Fixed memory leak in maintenance queue
    Fixed deadlock in Master
    Added VERSION_ADD_COMMIT_SUFFIX cmake variable
    Added address proxy
    Got rid of boost spirit warnings
    Fix to allow 0 column family for retured cells that are DELETE_ROW
    Auto-adjust blockcache size based on workload - Maintenance scheduler re-work
    Fixed progress meter for large load files and generated data sets
    Fixed --max-keys handling for ht_load_generator - Also respect min_pool and max_pool for Uniform random number generator
    Got bloom filter working again - Added new CellStoreV2 format with all necessary bloom filter state in trailer - Added --num-hashes and --bits-per-item bloom filter options
    Cleaned up FailureInducer interface
    Fixed METADATA split recovery race conditions
    Cleaned up regression tests; Updated documentation
    Made Master::server_left() close connection to avoid race condition
    [Issue 388] Fixed issue by checking for session existence within BDB txns.
    Setting replication site priority according to order in which replicas are listed in config file
    Fixed bug in Hyperspace logic which was causing Hyperspace to delete a handle for an expired session.
    Made changes to avoid duplicate masters among BDB replication sites.
    Modified Hyperspace replication logic to wait for permanent message acks from all replicas.
    Modified Capfiles with new hyperspace replication stuff
    [Issue 372] Minor cleanup, changed error message to info. -This is an expected case and not really an error
    Upgrading BerkeleyDB requirement to >= 4.8.x
    Replaced HT_EXPECTs in BerkeleyDbFilesystem code with HT_ASSERTs
    [Issue 372] Added scope guards to prevent BerkeleyDB cursor leaks. -Also changed a few asserts to HT_ASSERT
    Made changes to allow Hyperspace clients to connect to any Hyperspace replica and get redirected to master.
    Made changes to BerkeleyDbFilesystem so that each txn opens its own DB handle to avoid DB_REP_HANDLE_DEAD errors.
    Changes to implement basic replication
    Fixed problem preventing CellStore indexes from getting GC'd
    Leave AccessGroup in consistent state after compaction failure
    Fixed Memory Corruption in MetaLogDfsBase
    Fixed infinite loop on ROW_OVERFLOW
    Fixed deadlock
    Apply MAX_VERSIONS unconditionally
    Added RSML backups in $INSTALL/run/rsml_backup/
    Fixed problem with "LOAD DATA INFILE" from STDIN where incorrect progress bar update was the load down.
    Updated version number to 0.9.2.8
    Fix for Hyperspace race condition; Added compaction asserts
    Fixed delayed connect problem
    Updated system tests; Increased BlockCache default size to 150M
    Default dfsclient timeout to Hypertable.Request.Timeout
    Fixed memory leak; Added support for tcmalloc HEAPCHECK
    Added shadow CellCache; Re-wrote maintenance scheduler
    Allow .tsv files with empty values
    Issue 358: be a little smarter about default config file path.
    Fixed problem with soname.sh and libsigar
    Workaround for clock()/poll() incompatibility
    Added support for cmake variable HT_DEPENDENCY_DIR
    Modified BerkeleyDb search path to look for 4.8 release if available
    Changing BDB_DEADLOCK messages to info instead of warning.
    Added keys_only to Thrift ScanSpec interface
    Issue 361: Allow RangeServer to reconnect with Master after connection reset
    Upgraded to Thrift 0.2.0
    Added put_cell* API to Thrift interface to give easy access to shared periodic flushing mutators
    Removing BDB deadlock error messages. Use warnings instead.
    Fixed compile error on mac
    Updated htbuild for thrift r830673, kfs 0.4 and ceph 0.17 - Also added fix for python thrift installation on ubuntu
    Made Cells and ScanSpec fully take advantage of custom allocator - Made clear() semantics for the containers consistent as well.
    Consolidate pool allocators and their usage.
    Updated doxygen doc version
    Cleaned up some compiler warnings under gcc 4.3.
    Fixed an fmr for valgrind
    Added some test helper functions/classes/templates.
    Made property accessors const where appropriate - also tweaked the default config file to use relative path if possible.
    Temporarily added back thrift perl dependencies to the rpm package - probably better off zip the perl examples in the distribution.
    Added thrift version ht -v
    Added help/usage info for the ht wrapper
    Added basic regression test init_* function. - Caught int32_t masking issues on Solaris
    htbuild: update for fedora 11
    Fixed unknown option error from serverup for non-default options.
    Fixed hql result logging in ThriftBroker
    Upgraded thrift to r830673 to fix stack smashing in ThriftBroker - added slf4j jars for the new thrift - added java-thrift.sh for easy launching jhava thrift clients
    Added support for Hypertable.Network.Interface config property
    Added tsv-format and column-id-map options to csdump
    Added Query Cache - Added .values property to load generator spec file to indicate number of distinct values to generate
    Fixed RangeServer::load_range RSML write error handling to leave system consistent
    [Issue 355] Fixed and added regression for LDI timestamp issue.
    Fixed load_generator to support MaxKeys for load type 'update'
    Added CellCacheScanner entry cache - Also fixed some build issues on Snow Leopard
    Fixed problem where load_generator not respecting MaxBytes for query
    Fixed TableMutator::set_cells to throw BAD_KEY exception for cf/cell deletes without a column family.
    Replaced sleep with perl select() command in random-wait.sh
    Fixed bug in ConnectionManager::remove - Fixed broken regressions
    Fixed trailing '\n' problem in prune_tsv
    Fixed CLOSED_WAIT problem with serverup and HdfsBroker
    [Issue 340] Added Thrift MutatorFlag IGNORE_UNKNOWN_CFS.
    Added "--exec/-e" and "--command-file" switches to CommandShell to execute commands.
    Fixed memory corruption issue triggered when the interval mutator fails on successive writes.
    Added --newer switch to prune_tsv
    Fixed bug in Schema rename method
    Fixed SIGAR library detection on mac Snow Leopard
    Fixed connection/retry problems surfaced on Solaris
    Fixed int32_t overloading issue on Solaris i386.
    Change all tests/integration scripts to explicitly use bash
    Worked around RAND_MAX quirk on Solaris
    Worked around quirks in cmake on Solaris
    Added table name to error message and modified Table & TableIdentifier classes to expose name.
    [Issue 340] Added "ALTER TABLE RENAME COLUMN FAMILY" feature to rename column family names.
    [Issue 340] Added ignore unknown cfs feature to LDI.
    Changed Hypertable client Hyperspace connection check interval to 5s instead of 3s.
    Fixed CellStoreScanner to turn off readahead mode in case of single row scans.
    Commited changes to allow a client to automatically refresh stale schema during certain ops.
    [Issue 339] Added instrumentation to debug this issue and fixed empty bloom filter problem.
    Got rid of Hypertable.Request.Timeout from default hypertable.cfg
    Got Master::close() plumbed through properly - Got rid of some warnings in Hyperspace - Made performance improvements to prune_tsv
    Commited changes to allow a client to automatically refresh stale schema during certain ops.
    Added flag to allow Sessions to reconnect to Hyperspace instead of expiring.
    Major Hyperspace overhaul to store Session, Handle, Node and Event data mostly in BerkeleyDb.
    Added prune_tsv tool
    Fixed sequential-load test script
    htbuild: exit ASAP in case of errors
    Fixed tcmalloc version check (should run every time)
    Fixed FindCeph.cmake for the new location of libceph.h in 0.14
    Updated boost to 1.40 in package build - added ntpdate to htbuild to avoid make timestamp issues - fixed tcmalloc build problems introduced by last refactor

Version 0.9.2.7:
(2009-09-18)

    [issue 333] Fixed data loss problem after recovery
    [issue 332] Fixed problem in IntervalScanner due to delayed connection establishment
    [issue 331] Fixed post-recovery split problem
    [issue 323] Fixed problem that caused unnecessary work leading to thread exhaustion
    Upgraded to Hadoop 0.20.1
    Added support to run regressions on different DFSs
    Updated tcmalloc to 1.4 for package build
    Added CephBroker for Ceph DFS (http://ceph.newdream.net/)
    Added RS_LOG_RECOVER entry to RSML after recovery to indicate log validity
    Added htpkg utility script for building binary packages
    Modified RSML to create new file on load; keep only last 10
    Allow rpm build on Ubuntu/Debian machines
    Added bin/src-utils/htbuild for building packages
    Augmented htbuild to allow easy setup of dev environment
    [issue 333] Fixed data loss problem after recovery
    Added instrumentation to help track down bad BloomFilter creations.
    Added test for out-of-order revisions; Added rangeserver_dump to Capfiles
    Added RangeServer::dump() method to dump stats to file
    Added DUMP command to rsclient
    Modified shutdown command to first close before shutting down
    Fixed stop-servers.sh; Added close command to shell
    Fixed NPE in count_stored program
    More fix to packaging on Mac OS X.
    Issue 328: Fixed broken implementation of next_row in Thrift interface.
    Changed Hypertable.RangeServer.MemoryLimit.Percentage default to 60
    Improved SELECT documentation
    Added packaging and version info related to CephBroker.
    Fixed problem introduced in ht-env.sh due to bash discrepancies
    Cleaned up doc generating targets
    Made prerm always succeed to avoid broken package states
    Some font tweaks so that the pages look decent in alternative platforms
    Fixed memory corruption problem in ht_load_generator
    Removed obsolete demo directory and cleaned up some space errors
    Only print javac version if there is one in ht -v
    Made system libs id more portable with ldd.sh
    Worked around a compiler bug in gcc 4.2
    Made kfs version optional in ht -v
    Use i386 as 32-bit x86 suffix instead of i686 from uname
    Updated README for thrift and packaging
    Build thrift broker package first to preserve regular build tree states
    Add a build type suffix to the package if it's not a release build
    Print more component version info in ht -v
    Added quick version info in bin/ht
    Added option for kfs broker to print kfs version
    Install scripting language bindings for thrift even if thrift is not installed
    Added libthrift.jar to lib (in the source tree)
    Added a few convenient commands for ht for shared lib diagnosis
    Added script to figure out soname on supported platforms
    Made cmake generate binary package index html
    Moved libthrift.jar from lib to lib/java for consistency
    Renamed LICENSE to LICENSE.txt to appease the PackageMaker
    Added convenient method to check ldd under ht
    Added some missing components for thrift broker package
    Made starting server with logging options more robust
    Avoid globbing hidden files (.svn etc.) in conf directory.
    Made the FHSize script idempotent
    Warn about prelinked shared libraries
    Fixed conf packaging for thrift broker only build
    Added HypertThriftConfig back into list of targets for ThriftBroker install.


Version 0.9.2.6:
(2009-08-15)

    [issue 319] Fixed problem that prevented cell stores from getting written to METADATA Files column
    [issue 315] Fixed scanner creation problem on restricted range CellStores
    Fixed bug introduced by recent CellStoreScanner changes
    Refactored startup scripts for robustness
    Added support to create binary packages with minimal dependencies
    Added markdown HQL documentation
    Update HQL help text
    Changed stop-servers.sh to invoke 'shutdown' via rsclient
    Also added --no-hyperspace option to rsclient
    Re-named rsclient to ht_rsclient
    Changed Hypertable.Request.Timeout from 5 to 10 minutes
    Output row and column instead of rowkey and columnkey for LDI header
    Translate IP address to 127.0.0.1 when host resolves to 0.0.0.0
    Made sequential-load/run.sh easier to run from command line.
    Check returns of some system() calls to silence some compiler warnings.
    Use objdump to get the correct SONAME for packaging
    Included Capfile.* and removed 3+MB obsolete demo files from packaging
    Added post install scripts to FHSize the directory layout
    Fixed Schema::render_hql_create_table() to not included deleted columns and empty AGs
    Cleaned up some noop code recently introduced in CellStoreScanner
    Added TTL and MAX_VERSIONS to CREATE TABLE options
    DESCRIBE TABLE no longer displays IDs by default; Added WITH IDS option
    Updated README for binary packaging
    Refactored init* functions from Config.h into Init.h
    FindSIGAR: search for x86_64 as well as amd64
    Prefer tcmalloc_minimal over tcmalloc
    Added IN_MEMORY and BLOCKSIZE=<n> to CREATE TABLE options
    Fixed bug in HT_DECODE_BYTES32


Version 0.9.2.5:
(2009-07-29)

    Fixed memory leak in query path
    Implemented purgeable CellStore indexes and bloom filters
    Added mutator options to periodically flush buffers
    Fixed bug in CommitLog that was causing some fragments to get dropped incorrectly.
    Fixed bug in CommitLogReader caused by fragment queue iterator invalidation when log fragments are pushed to the back of the deque.
    Rewrote Cell Cache/Store Scanner
    Added MaintenancePrioritizerLowMemory used in low memory condition
    Implemented mutator no flag sync feature and added regression test.
    Fixed performance regression in IntervalScanner
    [Issue 313] Added temporary fix and instrumentation for debugging.
    Updated ruby tests for mutator API changes (The rescue block was masking exceptions)
    Fixed load-exception test
    Setting default commit log revision to TIMESTAMP_MIN instead of 0.
    Fixed commit-log-gc test
    Renamed ClientException::what to message for compatibility with most languages
    Added hql_*2 APIs for returning cells as arrays in HQL queries (To support find_by_sql in HyperRecord)
    Allow 'row' and 'column' for LDI hyperformat header
    Regenerated files with updated thrift
    Added --query-delay=<millis> option to load_generator
    Got rid of some java warnings
    Fixed KosmosBroker::pread to not modify current offset
    Thrift related changes for periodic mutator flush
    Rename a test label to follow the convention of the rest of the tests
    Restart test servers automatically every time when make *tests
    Added script to dump backtraces of running/hanging servers.
    Allow VALGRIND to be defined as environment variable in start scripts.
    Added missing php files for the no_log_sync flag.
    Fixing occasional segfaults upon exit in some tests
    Fixed occasional garbled version string.
    Added system integration test which loads 5G of data, restarts the cluster and does a scan to verify the load.
    Fixed infinite in-memory AccessGroup compaction loop
    Lazy load bloom filters
    Added rsclient 10x split/merge loop test
    Applied changes to build with GCC 4.4.0
    Fixed mutator log sync regression test and cleaning up dumplog.
    Added Hypertable.HqlInterpreter.Mutator.NoLogSync property
    Added command line switch --no-log-sync to hypertable cli for setting the aforementioned property
    Fixed a couple of rare NullPointerExceptions in HdfsBroker
    Added flags argument to ThriftClient open_mutator
    Modified load generator tool to support no log sync and flush interval flags.
    Fixed bug in commit log garbage collection that was caused some cells to be dropped.
    Print out bad line number on LOAD DATA INFILE exception
    Fixed ThriftClient-perl regression test
    Send KEYS_ONLY clause over to RangeServer for processing server-side
    Fixed test for Python Thrift module
    Changed RangeServer.MemoryLimit.Percentage default from 80 to 70
    Added size of block cache to memory tracker
    Got rid of hardcoded 60 second DfsBroker.Timeout


Version 0.9.2.4:
(2009-05-25)

  * Upgraded to Hadoop 0.20
  * Added metadata-split test; Found and fixed deadlock
  * Added --no-thriftbroker to start-all-servers.sh and include this option in integration tests
  * Added property Range.MaximumSize (default is 3G)
  * Renamed Range.MaxBytes to Range.SplitSize
  * Updated to version 0.9.2.4; fixed some warnings
  * Fixed performance regression in select command.
  * Added CellStoreV1 with 64-bit support
  * Fix for race condition in range size throttling
  * Throttling is done by forcing the RangeServer::update call to wait for maintenance
    completion on ranges which indicate that they are too big.
  * Added API for getting hyperspace session from client object
  * Checked in changes to Thriftbroker so that is works with recent Thrift version.
  * Updated README to include location of new working thrift snapshot.
  * Added support for selecting data into a compressed (gzip) file.
  * Added regression test for select into gzipd file
  * Added exit scope guard to cmd_select and cmd_load in HqlInterpreter so that the open output file is always closed.
  * Refactored LoadDataSource class to make it an interface for different sources.
  * Added derived classes LoadDataSourceFileLocal and LoadDataSourceStdin
  * Added LoadDataSourceFactory to create LoadDataSource objects
  * Added regression test for LoadDataSourceStdin
  * Modified ServerLauncher to open output files in append mode.
  * Added CellStoreFactory
  * Added instrumentation to TableInfo
  * Added CellStoreBlockIndex abstraction; Parameterized CellStoreScanner
  * Fixed overflow problem with METADATA table
  * Also fixed code to respect Hypertable.RangeServer.Range.MetadataMaxBytes
  * Fixed serialization bug in Hyperspace client Protocol.
  * Added support for attr_exists in the Hyperspace master for improved efficiency.
  * Added regression test for attr_exists in BerkeleyDb test.
  * Added Hyperspace attr_list API
  * Added support for "attrlist" and "attrexists" in Hyperspace shell.
  * Added Hyperspace shell regression tests for "attrlist" and "attrexists".
  * Made LocalBroker::rmdir a little more robust
  * Fixed problem that caused spurious "Hyperspace session expiration" errors
  * Fixed memory corruption in CommitLogReder error handling logic
  * [issue 246] Commit log not getting garbage collected
  * Set URGENT bit on Hyperspace keepalive packets
  * Set URGENT bit on some other RangeServer requests such as status and shutdown
  * Fixed rowkey access group imbalance problem (causing ROW OVERFLOW errors)
  * Added regression test RangeServer-rowkey-ag-imbalanc
  * Got KosmosBroker compiling with latest KFS code
  * Modified load_generator to make DataGenerator specification opitonal with --spec-file
  * Fixed "this should never happen" problem in Maintenance scheduler
  * Fixed split log garbage collection
  * Makes hypertable build with gcc 4.3.3 on Ubuntu
  * Fixed bug in scan limit feature and added regression test.
  * Created load generator tool to test performance for synthetic update/query loads.
  * Created DiscreteRandomGenerator to generate integer distributions.
  * Created ZipfRandomGenerator to generate random integers from a Zipf distribution
  * Modified existing Random class to add method to generate samples from uniform[0,1]
  * Fixed excessive split problem that caused ROW OVERFLOW errors
  * Fixed trailing comma problem in SHOW CREATE TABLE
  * Removed redundant error message in scanner creation.
  * Added Request throttling
  * Made interval scanner initial creation asynchronous.
  * Maintenance scheduler overhaul
  * [issue 268] RangeServer methods now verify table name
  * Added DataGenerator class for generating simulated data
  * Added ht_generate_data program with example configs in examples/generate_data
  * Added support for gcc 4.[345] in FindBoost for user compiled boost libraries.
  * CellCache.PageSize default back to 512K; Fixed CellCachePool::memory_used()
  * CellCachePool::memory_used() now returns total allocated from OS minus
  * Free space remaining on current page
  * Instrumenting CellStore and CellCache to track down suspected memory leak.
  * Changed dump_stats method to dump out commit log and per access group memory usage stats.
  * Hooked up dump_stats command to rsclient program.


Version 0.9.2.3:
(2009-03-26)

  * Fixed problem of range getting loaded multiple times
  * Fixed deadlock in AccessGroup::create_scanner (can't hold AG lock while accessing LiveFileTracker)
  * [issue 240] Fixed CellCacheScanner logic to apply deletes correctly.
  * Issue 255: Removed asserts for last errors to avoid ThriftBroker crashing due to bad user input.
  * Upgraded to recent version of Thrift
  * Improving scanner creation error reporting.
  * Fixed intermittent HyperComm-Timeout test issue
  * [issue 262] Fixed race condition between DROP TABLE and range recovery
  * Fixed problem with split-recovery 3 & 7
  * Eliminated circular reference to Range that was preventing Range destruction
  * Issue 225: Fixed/improved table identifier and schema caching mechanism.
  * Also fixed an issue in IntervalScanner that was silently ignoring errors.
  * Switch to openssl for md5 in tests for better portability.
  * Updated thrift documentation on Cell as array interface.
  * Upgraded FindBoost to support 1.38
  * Changed random_read_test to use new config/property system
  * Added --flush option to random_write_test to flush after every write
  * Changed default # of maintenance threads in RangeServer to min(2, number-of-cores)
  * Changed seek+read to pread in HdfsBroker::PositionRead
  * Fixed RangeServer to return TABLE_NOT_FOUND errors when table not found
  * Issue 253: Alternative thrift interface for cells as arrays.
  * Got rid of hardcoded 30000 ms timeouts in Master
  * Added CommitLog.PruneThreshold.Max.MemoryPercentage (default 75)
  * Changed AccessGroup.MaxMemory to 1GB by default
  * Got rid of various Timeout properties in favor of just Hypertable.Request.Timeout
  * Set most timeouts to 180ms
  * [issue 258] Minor issue with incorrect time units in Thriftbroker timeout.
  * Explicitly flush output streams at a few places until we don't have to _exit.
  * Modified CellCache::memory_used() to return accurate info from underlying pool
  * Fixed AccessGroup recovery problems for IN_MEMORY access groups
  * Made CellCache memory pool page size configurable
  * Introduced Hypertable.RangeServer.AccessGroup.CellCache.PageSize, default is 100KB


Version 0.9.2.2:
(2009-03-04)

  * Added support for ALTER TABLE
  * Addded Bloom Filter to CellStore
  * Added calls to _exit in random_read/write benchmark programs to avoid static destruction
  * [issue 251] Eliminated race condition between load_range and drop_table
  * Upgraded to Hadoop 0.19.1
  * [issue 245] Fixed segfault problem with splits and multiple AGs
  * Updated thrift support for new namespace changes in the upstream library
  * Added missing columns in the thrift scan spec
  * Added more scanner/mutator examples for various languages
  * Updated README link to the new recommended thrift snapshot
  * Made CellStore::create API more generic
  * Added row_len and column_qualifier_len in Key to save repeated strlens
  * Enabled Bloom filter by default
  * Fixed crash in TableMutator if global config properties are not initialized
  * Added floating point support for properties
  * Fixed broken each_cell and with_mutator methods in ruby thrift client
  * Wrapped with_* methods in ensure block
  * Added tests for scanner and mutator usage
  * Issue 229: fixed some warnings with gcc 4.3+
  * [issue 239] Made serverup respect --wait value in all places
  * [issue 246] Fixed commit log GC problem
  * Upgraded to Quicklz 1.4 and made quicklz the default compressor for CommitLog
  * [issue 245] Use broker-assigned strictly increasing fds in KosmosBroker
  * [issue 234] Made wait for Hyperspace respect supplied timeout
  * [issue 127] Made Hyperspace server detect suspension and extend leases
  * [issue 231] Fixed problem where CellStoreV0::add return value was getting ignored
  * [issue 238] Fixed crash problem during RangeServer::replay_update
  * [issue 235] Eliminated abort after split attempts fail
  * [issue 236] Fixed hang problem on CentOS 5
  * Fixed a range server restart issue by overwriting tmp explicitly
  * Added wait logic in Master when root METADATA range server is down
  * Fixed problem where drop_table was executed during a range split causing bad RSML sequence
  * Got rid of an assert in the Comm layer on bad header
  * Fixed problem where 'Files' column not updated properly after split
  * Fixed problem where Gc.Interval was being treated as seconds
  * Changed a number of programs to exit using _exit to avoid static destruction problems
  * Fixed problem caused by invalid initializations of rssstat (Hiroyuki)
  * Made stopping servers faster by waiting in parallel
  * Leave RSML alone in case of errors
  * Refactored bash specific commands in Capfile into a separate script
  * Disable thrift broker API logging by default
  * Issue 190: Reverted to the METADATA sanity check since RangeLocator is fixed


Version 0.9.2.1:
(2009-01-22)

  * Added ulimit -c unlimited to the top of start-thriftbroker.sh
  * Fixed NULL pointer dereference in LoadDataSource on bad input
  * Fixing another Hyperspace deadlock (tied up reactor thread)
  * Added logic to retry open of Hyperspace file /hypertable/tables/METADATA
  * Make sure RangeServer gets killed in between runs of range split recovery test.
  * Fixing deadlock in Hyperspace session lease renewal logic.
  * Bumped up data size for split recovery tests to ensure crashes
  * Remove local fs in clean-database.sh even if dfsbroker is not running
  * Fixed initialization race condition in Master
  * Commented out MetaLog-Master test
  * Fixed version generation for testing with unsuccessful merges
  * Fixed reactor thread deadlock in Hyperspace
  * Fixing race condition in RangeServer recovery that was causing Hypertable master to crash.
  * Eliminated DfsBroker test dependency on /usr/share/dict/words
  * Eliminated reference to deprecated class TException in ruby client test
  * Changed MasterClient to throw exceptions
  * Fixed deadlock in Hyperspace
  * Updated thrift API documentation
  * make doc (and thriftdoc) now generate thrift api doc as well
  * Fixed problem with LocalBroker where it was closing the wrong descriptor because of reuse
  * Fixed a CommitLog serialization problem introduced with commit a58dce91b4059b022921287a43d7afb669380d0b
  * Augmented multiple-maintenance-threads test to run a "SELECT *" in the background once per second
  * Cleaned up logic that manages 'Files' column contents in AccessGroup
  * Cleaned up error handling logic in many places
  * Fixed split retry logic after exception
  * Renamed CrashTest class to FailureInducer and added support for throwing exceptions
  * Added 'RangeServer-load-exception' test to validate proper retry when load_range, invoked after split, throws an exception
  * Added MicrosecondLayout class in Logger.cc for adding microseconds to timestamps in log messages
  * Augmented the multiple-maintenance-threads test with a second dump to see if it's a transient error if the first run comes up short
  * Also added a note in README about force restart test servers
  * Fixed random segfaults upon exit in random_*_test and serverup
  * Coding convention cleanups
  * [issue 222] Fixed race condition in RangeServer::update introduced with SplitOff=high
  * Cleaned up start up scripts
  * Renamed top-level 'test' directory to 'tests' for some platforms
  * CMake file changes to restart test servers automatically
  * Cleaned up header files to reduce dependency on Config.h hence Version.h
  * Fixed a few issues with FindBoost.cmake
  * Added .gitignore for *.pyc
  * Made some integration tests runnable via make test
  * [issue 188] Added support for URGENT CommHeader flag
  * Did some work on server-side request timeout

Version 0.9.2.0:
(2009-01-05)

  * Fixed initialization problem that caused ConnectionManager thread to exit immediately
  * Fixed build for boost 1.35+
  * Issue 209: Fixed build with gcc 4.3+
  * [issue 216] Fixed problem where clock skew was causing updates to be dropped
  * [issue 201] Fixed deadlock recently introduced with support for SplitOff=high
  * Made commit log more robust
  * Added calls to FSDataOutputStream.sync() for FLUSH for HdfsBroker
  * Fixed range server metalog reader
  * Made RangeServer::load_range() call in Master::report_split() synchronous
  * Fix for ReactorRunner to not use handle if de-registering its fd failed
  * Fixed and expanded split-recovery integration test
  * Worked around compiler (gcc 4.1 vs 4.0) quirks in overloading
  * Fixed a bug in converting hypertable cell to thrift cell that was setting the
    wrong column qualifiers in subsequent cells that don't have column qualifiers.
  * [issue 193] Added table generation to CellStoreTrailer
  * [issue 206] Fixed problem where CommitLog fd gets into bad state
  * Fixed race condition in RangeServer::load_range (reported by Phoenix)
  * Wrapped compaction logic in try/catch block to ensure maintenance bit gets cleared on exception (reported by Phoenix)
  * Added support for Hypertable.CommitLog.SkipErrors (default is now ASSERT)
  * Got rid of shutdown segfault in ReactorRunner by only printing LOG message if !shutdown
  * Added support for Hypertable.RangeServer.CommitLog.Flush
  * Got rid of Kfs.Broker.Flush property (in favor of Hypertable.RangeServer.CommitLog.Flush)
  * Expanded split-recovery integration test
  * Updated README to include a link to a working snapshot of thrift
  * Fixed timeout usage in various language bindings
  * Also added destructors (or similar mechanism) to close transport
  * Fixed some javac dependency issues caused by package/path mismatch
  * Added a boolean flag to allow Client::open_table to bypass cache
  * Made spirit parsers thread safe
  * Allow hypertable clients to take different config files
  * Fixed custom validate issues with properties
  * Added regression tests for Properties
  * Fixed Hyperspace callback signature for 'master' file
  * Added options to skip errors in metalogs (default throws)
  * Updated regression tests for range server metalog
  * FindBoost.cmake fix for Boost 1.37
  * Changed type of Kfs.Broker.Flush from i32 to bool

Version 0.9.1.1:
(2008-12-23)

  * Changed default value for Hypertable.RangeServer.CommitLog.RollLimit back to 100MB
  * [issue196] Added escape/unescape logic to select and LDI
  * Eliminated race condition that caused ASSERT with multiple maintenance threads
  * Got rid of alignment logic in CellCachePool
  * Changed 'range not found' error to info message in RangeServer::create_scanner
  * Fixed seg fault during construction of 2nd Client object
  * Fixed bug in MetadataRoot::get_next_files
  * Added commit log gc integration test
  * Fixed bug in commit log gc logic
  * [issue162] Fixed pread bug in HdfsBroker
  * Upgraded to Hadoop 0.19.0
  * Fixed seg fault in Comm destruction sequence
  * Fixed shutdown logic in ConnectionManager
  * Changed default value for Hypertable.RangeServer.Range.SplitOff property to "high"
  * Fixed problem with System::locate_install_dir for binaries running outside a normal installation
  * Fixed some Timer problems introduced with millisecond change
  * Plumbed debug() method through Filesystem class down into brokers
  * Fixed seg fault in serverup on shutdown
  * Fixed cmake FindKfs logic
  * More build dependency cleanups (now truely independent of thrift)
  * Finished support for Hypertable.RangeServer.Range.SplitOff=(high|low)
  * Added aol-time-order integration test to validate proper functioning of 'high' mode
  * Wait for all DFSBroker files to close before removing directories
  * Made thrift support really (it was intend to be but not) optional
  * Made version number more accurate as well.
  * Fixed cyclic dependency between Common and AsyncComm libraries
  * Fixed some Capfile issues; added test/integration
  * Reorganized the toplevel test directory a bit
  * Added a doc/README that points people to hypertable.org
  * Removed ThriftBroker startup dependency on /hypertable/tables/METADATA hyperspace file
  * Also fixed hang/crash problem in Comm::~Comm

Version 0.9.1.0:
(2008-12-08)

  * Added a simple thrift broker for hypertable services
  * Fixed build issues and warnings on 64-bit CentOS
  * Use CMAKE_DL_LIBS instead of -ldl for portability
  * Coding convention cleanups
  * Fixed a race condition in Master::report_split
  * Added CellCache memory pool + fixed memory accounting
  * Made Hyperspace command shell utility reuse Hypertable command shell code.
  * Fixed crash with > 1 maintenance threads
  * Fixed ROW_OVERFLOW regression
  * [issue 177] Changed all integers written into Hyperspace into ASCII strings
  * Added better diagnostic output for checksum mismatch errors
  * Changed all timeouts from seconds to milliseconds
  * Upgraded Comm header
  * Fixed crash in INSERT command with columns with no qualifiers
  * Added (optional) timer to Hyperspace and Master clients
  * Fix for issue#170.
  * Hypertable Client now contains a RangeLocator
  * Refactored Config to allow easy composition of component policies
  * Adopted SIGAR for cross-platform system info/stat
  * Added MT-safe/faster code to parse ip address
  * Issue 156: simple row/range level transaction support
  * Removed extra connection manager for METADATA table used by Master
  * Preserve column family order in HQL schema
  * Refactored out HqlInterpreter from HqlCommandInterpreter
  * Added support for RAII idiom with ScopeGuard and friends
  * Added a generic Locker for any object with lock/unlock methods
  * Added HT_ASSERT as a short cut of HT_EXPECT(expr, Error::FAILED_EXPECTATION)
  * Worked around StringUtil::vform problem in log4cpp 1.0 for certain platforms.
  * Refactored handle_event a bit to reduce code duplications
  * Fixed a few (nread < 0) cases, where nread is size_t.
  * Added System::rand64()
  * Updated installation instructions based on feedbacks
  * Cleanups for gcc 4.3+
  * Made HypertableJavaComponents a cmake target
  * Refactored FindKfs.cmake
  * Added a few missing ", or any later version." to GPL license blurbs
  * Fixed a situation where some cellstores are not GC'ed
  * Made some metalog entry errors non-fatal
  * Fixed column family TTL feature and added regression test for it. (Issue #160)


Version 0.9.0.12:
(2008-11-08)

  * Fixed TableMutatorScatterBuffer hang problem
  * Fixed bug in MergeScanner and added optimized MergeScanner for scans with m_return_deletes
  * Upgraded to Hadoop 0.18.2
  * Fixed random read performance regression
  * Fixed descriptor leak in HdfsBroker
  * [issue 166] Fixed problem of bad disk usage accounting which caused SEGFAULT
  * Added log rotation via cronolog
  * Added option for dump_metalog to copy a metalog
  * Bump the stream log buffer size to 4KB for longer backtrace
  * Added --wait option for serverup serverup dfsbroker had been timing out too soon
  * Fixed default timestamp value on the KeySpec contructor args
  * Added more detailed error info for unexpected metalog entries
  * Fixed a race condition in update while local recovery is in progress
  * Removed old code that was causing last_table_id resetting to 0 upon Master restart.
  * Use thread-safe gethostbyname_r on linux (was causing SEGFAULT)

Version 0.9.0.11:
(2008-09-30)

  * Fixed problem with commit log garbage collection
  * Overhaul: cleaned up AccessGroup compaction logic
  * Overhaul: separated timestamp from revision number
  * Overhaul: eliminated timestamp order restriction
  * Overhaul: cleaned up RangeServer::update()
  * Check for bad column name in ScanSpec and throw exception
  * Upgraded to Hadoop 0.18.1
  * Add support for qualified columns in LOAD DATA INFILE
  * Got SELECT ... INTO FILE working again
  * Updated README to include log4cpp patch instructions
  * Fixed NULL pointer deref in BMZ on uncompressible data
  * [issue154] Fixed problem in MergeScanner causing max_versions probs
  * Fixed retry logic inside IntervalScanner
  * Added a RangeServer::get_statistics() method and rsstat tool (Donald)
  * Fixed a number of issues getting KFS broker up and running
  * Modified Capfile to allow a dfs= variable override to specify which dfs.
  * Modified scripts to only test for servers on localhost

Version 0.9.0.10:
(2008-08-14)

  * Fixed range loss problem when can't write RSML during split
  * Fixed Hyperspace to retry txn upon BDB deadlock exception
  * Fixed a bug in RangeServer::schedule_log_cleanup_compactions that prevents log cleanup compactions from happening. (thanks Donald)
  * Made Hyperspace client throw exceptions
  * Changed epoll to level triggered for < 2.6.17, edge triggered for newer
  * Fixed problem in HdfsBroker which caused it to close all handles
  * Fixed problem with accept() logic in edge-triggered mode
  * Fixed problem in FindBerkeleyDB.cmake also fixed link problem in dfsclient
  * Got rid of all calls to rand(), etc.  More work on random benchmark tools
  * Moved rand startup wait out of RangeServer and into Capistrano
  * Added full deprecation warnings to build
  * Eliminated infinite loop in AsyncComm; Fixed HdfsBroker shutdown
  * Upgraded TableReader::next(...) output values so that not only key but also column family and qualifiers are known to the reducer
  * Initial checkin of freebase example

Version 0.9.0.9:
(2008-08-03)

  * Fixed Linux epoll problems
  * Removed deadlock in Master::drop_table()
  * Modified shutdown scripts to wait for service shutdown before returning
  * Changed default listen() pending connection backlock from 64 to 1000
  * Modified RangeServers to wait random interval [0..2] secs before starting

Version 0.9.0.8:
(2008-08-01)

  * Added schema cloning (CREATE TABLE x LIKE y) (thanks to bithckr)
  * Fixed a potential macro redefinition in compat-c.h (thanks to Leon Mergen)
  * Clarified some documentation based on user feedback
  * Added fix for ignored 'try' in Hyperspace try_lock (thanks to liaoguangxian)
  * Added CELL expressions
  * Fixed bad reference to freed Hyperspace Session object
  * ported mapreduce connector to the newer API
  * Changed Hypertable::Client constructor to accept install dir
  * Got TableScanner working with multiple row intervals
  * Overhauled HQL WHERE clause (scan predicate)
  * Modified ScanSpec to include vector of row ranges; Added ScanSpecBuilder
  * Set TOS field on Hyperspace UDP packets to Minimize delay
  * Fixed deadlock issues in RangeServer during replay
  * Added drop_table RangeMetaLog entry
  * Overhauled launch scripts; Upgraded to Hadoop 0.17.1
  * Avoid using fs->length(path) to judge whether a RangeServerMetaLog file is empty, which doesn't work well in Hadoop DFS.
  * Fixed a bug in Read/PositionRead due to misuse of readFully().

Version 0.9.0.7:
(2008-07-18)

  * Got RangeServer recovery working
  * Added shutdown command to hypertable command interpreter
  * Fixed ApplicationQueue spin problem (c++ & java) plus other bugs
  * Merged in Mateusz Berezecki's Hadoop MapReduce contribution
  * Added random_write_test
  * Made Comm a singleton as intended
  * Added explicit Hyperspace session destroy mechanism
  * Changed epoll usage from level to edge triggered
  * Added option to preserve key columns as regular columns
  * Upgraded to latest KFS code
  * Check for and throw exception on bad scan spec (start > end)
  * Added ROW_UNIQUIFY_CHARS option to LOAD DATA INFILE
  * Added utility to dump metalog
  * Added convenient constructor (host, port) for DfsBroker client.
  * Added version check in case of shared libraries
  * Added Hypertable::Config to make init easier
  * Added a regression test to ensure that deletes are retroactively applied
  * [issue 120] Fixed problem with MergeScanner not properly handling deletes
  * [issue 118] Fixed segfault on empty .tsv line; Fixed output supress flags
  * [issue 119] Fixed problem where end timestamp was getting ignored
  * Doc: added notes on shared library install usage.
  * Cleanup build documentation
  * Avoid hash_value redefintion with boost 1.35+
  * Build: link libraries cleanup
  * [issue 115] Fixed Hyperspace Berkeley DB deadlock problem
  * Fixed Master error handling logic in create_table
  * Fixed link problem on XCode 2.4
  * Added RangeServer metalog classes and tests
  * Use native 'exists' instead of 'get' for BDB FS 'exists' calls.
  * Made BDB FS do basic recovery on init
  * Added support to print "pretty functions" in exception trace
  * Changed TableIdentifierCopy etc. to *Managed for what they really are
  * Added some documentation for tricky part of DynamicBuffer
  * Updated serialization test for str16 and bytes32
  * remove HT_TRY_DECODE in favor of HT_TRY
  * Added script to find & replace with perl regex
  * Coding convention/guideline sweep

Version 0.9.0.6:
(2008-06-14)

  * Ported Hyperspace to Berkeley DB
  * Fixed core dump in HdfsBroker when --verbose is not set
  * [issue 110] Fixed scanner infinite looping on large objects
  * Fixed buffer overrun problem in Hyperspace keepalive message
  * Cleaned up TableMutator retry logic
  * Made cmake 2.6 compatible.

Version 0.9.0.5:
(2008-06-03)

  * Made size of location cache configurable; set default to 1M
  * [issue 67] fixed bad free in comm layer
  * Fixed log fragment GC problem
  * Fixed race condition in LocalBroker::close()
  * Fixed doxygen comments; Updated Doxyfile to exclude boost fix dir
  * [issue 99] Added TableMutator::retry()
  * [issue 18] Added support for '~' expansion in hypertable
  * [issue 10] Implemented proper serialization for Serialization.h functions
  * [Issue 104] Fixed hang problem in HdfsBroker
  * Changed serialization byte ordering to little endian
  * Purge old cells to avoid repeated deletion of old files
  * Various portability fixes
  * [Issue 71] Fixed lagging scanners referencing GC'd CellStore problem
  * Added release callback to MergeScanner
  * Added GC support for issue 71 (race condition while compaction/scanning)
  * Added Filesystem::rename and friends
  * Added flush option to Filesystem::append and friends
  * [issue 41] Fixed CellCache::purge_deletes problem
  * Got RANGESERVER_ROW_OVERFLOW error propagating back to client
  * Upgraged to Hadoop 0.16.4
  * Overhauled Client library to send errors back as deltas
  * Added mutex class to accomodate changes in boost 1.35+
  * Fixed ambiguous operator+ overload problem
  * Created new StaticBuffer class which is now used in all internal APIs
  * Added destructor to Buffer class
  * Cleaned up DynamicBuffer and Buffer
  * Rearranged for better branch prediction in encoded_length_vi*
  * Switched to a more reliable signal facility (sigaction)
  * Got rid of some warnings on release build
  * Fixed compile problem on Ubuntu
  * Got rid of ByteString32 in favor of vint ByteString
  * Moved Serialization.h and its tests to Common
  * Added decode_i8 and regression tests.
  * Refactored BufferT and ExtBufferT usages to use Common/Buffer
  * Changed format of buffer passed to replay_update();
  * Added portable serialization code:
  * Added support for exception chaining.
  * Changed append API to reflect the ownership change of write buffer
  * Added include for stricter compilers (e.g. gcc 4.1.2)
  * Changed TableIdentifierWrapper to TableIdentifierCopy
  * Got rid of the EncodedLength/Encode/Decode functions from Types.h
  * Implemented RangeServer::replay_update
  * Modified RangeServer::load_range to include RangeState object
  * Fixed some build problems on mac (because of newly added dependencies)
  * Enhanced LOAD DATA INFILE to accept alt. header file and zipped files
  * Fixed free memory used problem and got rid of warnings
  * Added REQUEST_TIMEOUT exception to client; upgraded to Hadoop 0.16.3
  * Added wrapper for high res time
  * Added timeouts to TableMutator and TableScanner
  * Changed RangeServerClient to throw exceptions
  * Made scan spec public fields naming consistent with the rest of the API
  * Logging cleanup; now redirectable; flushable; added stream macros
  * Made ReferenceCount noncopyable
  * Fixed a leaking corner case in Hypertable::format
  * Added RangeState and re-organized Range split logic
  * Added TableIdentifierWrapper and RangeState
  * Allow keys to be built from multiple columns in LOAD DATA INFILE
  * Fixed segfault caused by race condition in sampleClient
  * Commit log re-write
  * Fixed HdfsBroker::rmdir to return FileNotFound
  * Moved header checksum to end of header; Improved split row selection
  * FS interface cleanup. Use exception where appropriate.
  * Cleaned up BlockCompressionHeader code
  * Fixed bug in startup scripts related to hadoop upgrade
  * Fixed initialization order problem in RangeServer
  * Cleaned up CommitLog types and added doxygen comments
  * Added smart pointers to MetaLog readers
  * Finished adding exists method to DfsBroker client
  * Added exists() method to Filesystem interface; Upgraded to Hadoop 0.16.2
  * Fixed regressions due to the license preamble change
  * Wrap long lines in license preambles.
  * Delete cruft in attic along with the attic
  * Modified ApacheLogParser to handle .gz files
  * Put time formatting in a function for apache_log example
  * Changed ApacheLogEntryT to ApacheLogEntry
  * Cleaned up and improved apache_log example
  * Got rid of error codes in Client API in favor of exceptions
  * Types name change; Comment header update
  * First cut of meta log API
  * More build cleanups: move generic definitions outside gcc macros; support gcc 3.4.x
  * Use our faster implementations by default and rename wikipedia based impls to *_wp
  * Reorganized Range split logic for new MetaLog implementation
  * Fixed bug that was causing default CellStore compressor to be "none"
  * Changed so SplitPoint and SplitDir are passed through Master
  * Got rid of split_timestamp
  * Dropped timestamp from location string
  * Handle large files on 32-bit systems.
  * Fixed problem loading .tsv files > 2GB on Linux
  * Changed argument of RangeServer::drop_table to TableIdentifierT
  * Fixed IN_MEMORY loading problems (issue #66)
  * Fixed initialization problem in hypertable command interperter
  * Added replay commands to rsclient; Added RangeServer::drop_range()
  * Implemented RangeServer::replay_start and replay_commit
  * Got rid of boost program_options hack
  * Build and install cleanups.
  * Ported rsclient to new command line shell framework
  * Abstracted command line shell into class that can be shared
  * Fixed a few small (seemingly innocuous) issues in AsyncComm
  * Fixed memory tracking
  * Added complete TableIdentifier into CommitLog entry headers
  * Created TableInfoMap class to prepare for "replay" map
  * Added plumbing for RangeServer replay methods
  * Modified ScannerTimestampController to store Timestamp objects
  * Fixed FindBoost.cmake on Redhat 4u3
  * Changed CMakeLists.txt files to facilitate use of other malloc packages

Version 0.9.0.4:
(2008-02-27)

  * Added code to check boost and apply fixes if necessary
  * Fixed issue #47 Cleaned up DROP_TABLE handling in RangeServer and Client
  * Fixed issue #63 Dropped updates under concurrent loading
  * Fixed race condition in Master between server join & register
  * Fixed RangeServer hang after TIMESTAMP_ORDER_ERROR error
  * Fixed performance bug that was hurting random reads

Version 0.9.0.3:
(2008-02-19)

  * Fixed bug in MergeScanner where deletes were being wrongly applied
  * Detect and report "supplied timestamps not strictly increasing" error
  * Added testing options KEYS_ONLY and RETURN_DELETES to SELECT statement
  * Removed unused tests and associated data to bring source tarball below 20MB
  * Modified ApacheLogParser to return non-coliding timestamps for requests that happened in the same second

Version 0.9.0.2:
(2008-02-12)

  * Made all timestamps interpreted as GMT (issue #56)
  * Catch table scanner / mutator exceptions in Master GC logic (issue #55)
  * Fixed Master abort when last_table_id attribute of /hypertable/master not found
  * Modified kosmosBroker properties to be capitalized camel case

Version 0.9.0.1:
(2008-02-07)

  * Fixed compile errors on Ubuntu, FC5 and FC6
  * Got rid of AsyncComm regression dependency on /usr/share/dict/words
  * Fixed critical GC bu that deleting good MEATADATA rows
  * Fixed FindBoost.cmake to work if only .so files are installed
